name: Training Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'data/**'
      - '**.dvc'
  workflow_dispatch:  # Allow manual trigger

jobs:
  train:
    runs-on: ubuntu-latest
    
    services:
      minio:
        image: minio/minio:RELEASE.2023-03-20T20-16-18Z
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        ports:
          - 9000:9000
        options: >-
          --health-cmd "curl -f http://localhost:9000/minio/health/live"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        volumes:
          - minio_data:/data
        command: ["server", "/data", "--console-address", ":9001"]
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
        
    - name: Configure DVC
      env:
        MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
        MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
      run: |
        dvc remote modify --local minio access_key_id $MINIO_ACCESS_KEY
        dvc remote modify --local minio secret_access_key $MINIO_SECRET_KEY
    
    - name: Run Pipeline
      run: python scripts/pipeline.py
      env:
        MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
        MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
    
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: pipeline-logs
        path: logs/
        retention-days: 7 
